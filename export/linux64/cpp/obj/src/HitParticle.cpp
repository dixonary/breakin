// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_HitParticle
#include <HitParticle.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_IFlxBasic
#include <flixel/IFlxBasic.h>
#endif
#ifndef INCLUDED_flixel_IFlxSprite
#include <flixel/IFlxSprite.h>
#endif
#ifndef INCLUDED_flixel_effects_particles_FlxParticle
#include <flixel/effects/particles/FlxParticle.h>
#endif
#ifndef INCLUDED_flixel_effects_particles_IFlxParticle
#include <flixel/effects/particles/IFlxParticle.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_533c51a5294464ff_154_new,"HitParticle","new",0xf0f7c50b,"HitParticle.new","Paddle.hx",154,0x43ccfc74)
HX_LOCAL_STACK_FRAME(_hx_pos_533c51a5294464ff_158_update,"HitParticle","update",0x17598e3e,"HitParticle.update","Paddle.hx",158,0x43ccfc74)

void HitParticle_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_533c51a5294464ff_154_new)
HXLINE( 155)		super::__construct();
HXLINE( 156)		this->makeGraphic((int)2,(int)2,(int)-1,null(),null());
            	}

Dynamic HitParticle_obj::__CreateEmpty() { return new HitParticle_obj; }

void *HitParticle_obj::_hx_vtable = 0;

Dynamic HitParticle_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< HitParticle_obj > _hx_result = new HitParticle_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool HitParticle_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x25a685e0) {
		if (inClassId<=(int)0x13a7eba5) {
			if (inClassId<=(int)0x0b6ffd77) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0b6ffd77;
			} else {
				return inClassId==(int)0x13a7eba5;
			}
		} else {
			return inClassId==(int)0x25a685e0;
		}
	} else {
		return inClassId==(int)0x2e105115 || inClassId==(int)0x564d87d1;
	}
}

void HitParticle_obj::update(Float d){
            	HX_STACKFRAME(&_hx_pos_533c51a5294464ff_158_update)
HXLINE( 159)		this->super::update(d);
HXLINE( 160)		this->set_alpha(((int)1 - ::Math_obj::sqrt(((Float)this->age / (Float)this->lifespan))));
            	}



hx::ObjectPtr< HitParticle_obj > HitParticle_obj::__new() {
	hx::ObjectPtr< HitParticle_obj > __this = new HitParticle_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< HitParticle_obj > HitParticle_obj::__alloc(hx::Ctx *_hx_ctx) {
	HitParticle_obj *__this = (HitParticle_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(HitParticle_obj), true, "HitParticle"));
	*(void **)__this = HitParticle_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

HitParticle_obj::HitParticle_obj()
{
}

hx::Val HitParticle_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *HitParticle_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *HitParticle_obj_sStaticStorageInfo = 0;
#endif

static ::String HitParticle_obj_sMemberFields[] = {
	HX_HCSTRING("update","\x09","\x86","\x05","\x87"),
	::String(null()) };

static void HitParticle_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(HitParticle_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void HitParticle_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(HitParticle_obj::__mClass,"__mClass");
};

#endif

hx::Class HitParticle_obj::__mClass;

void HitParticle_obj::__register()
{
	hx::Object *dummy = new HitParticle_obj;
	HitParticle_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("HitParticle","\x99","\xe3","\xbf","\xf8");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = HitParticle_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(HitParticle_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< HitParticle_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = HitParticle_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = HitParticle_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = HitParticle_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

